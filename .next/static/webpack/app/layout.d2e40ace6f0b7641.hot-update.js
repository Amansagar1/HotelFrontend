"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/Webservices/HotelAPIController.js":
/*!***********************************************!*\
  !*** ./src/Webservices/HotelAPIController.js ***!
  \***********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PutDeluxeRoom: () => (/* binding */ PutDeluxeRoom),\n/* harmony export */   PutFamilyRoom: () => (/* binding */ PutFamilyRoom),\n/* harmony export */   PutSuperDeluxeRoom: () => (/* binding */ PutSuperDeluxeRoom),\n/* harmony export */   createRoom: () => (/* binding */ createRoom),\n/* harmony export */   fetchAvailableRooms: () => (/* binding */ fetchAvailableRooms),\n/* harmony export */   getAboutUs: () => (/* binding */ getAboutUs),\n/* harmony export */   getAllBookingRooms: () => (/* binding */ getAllBookingRooms),\n/* harmony export */   getAllRooms: () => (/* binding */ getAllRooms),\n/* harmony export */   getAmenities: () => (/* binding */ getAmenities),\n/* harmony export */   getAmenitiesPage: () => (/* binding */ getAmenitiesPage),\n/* harmony export */   getDeluxeRoom: () => (/* binding */ getDeluxeRoom),\n/* harmony export */   getDeluxeRoomById: () => (/* binding */ getDeluxeRoomById),\n/* harmony export */   getFamilyDeluxeRoom: () => (/* binding */ getFamilyDeluxeRoom),\n/* harmony export */   getFamilyRoomById: () => (/* binding */ getFamilyRoomById),\n/* harmony export */   getFooter: () => (/* binding */ getFooter),\n/* harmony export */   getRoomById: () => (/* binding */ getRoomById),\n/* harmony export */   getRoomsCategory: () => (/* binding */ getRoomsCategory),\n/* harmony export */   getSuperDeluxeRoom: () => (/* binding */ getSuperDeluxeRoom),\n/* harmony export */   getSuperDeluxeRoomById: () => (/* binding */ getSuperDeluxeRoomById),\n/* harmony export */   loginUser: () => (/* binding */ loginUser),\n/* harmony export */   postBookingRoom: () => (/* binding */ postBookingRoom),\n/* harmony export */   registerUser: () => (/* binding */ registerUser),\n/* harmony export */   sendBookingEmails: () => (/* binding */ sendBookingEmails),\n/* harmony export */   submitForm: () => (/* binding */ submitForm)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n/* harmony import */ var _APIEndpoints__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./APIEndpoints */ \"(app-pages-browser)/./src/Webservices/APIEndpoints.js\");\n\n\nconst getRoomsCategory = ()=>{\n    return axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(_APIEndpoints__WEBPACK_IMPORTED_MODULE_0__[\"default\"].GET_ROOMS()).then((response)=>{\n        console.log(\"API Response:\", response.data);\n        return {\n            result: response.data\n        };\n    }).catch((error)=>{\n        console.error(\"Error fetching rooms data:\", error);\n        return {\n            result: null\n        };\n    });\n};\n// Get Deluxe Room data\nconst getDeluxeRoom = ()=>{\n    return axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(_APIEndpoints__WEBPACK_IMPORTED_MODULE_0__[\"default\"].GET_DELUXE_ROOMS()).then((response)=>{\n        console.log(\"Deluxe Room API Response:\", response.data);\n        return {\n            result: response.data\n        };\n    }).catch((error)=>{\n        console.error(\"Error fetching Deluxe Room data:\", error);\n        return {\n            result: null\n        };\n    });\n};\nconst getDeluxeRoomById = async (id)=>{\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(_APIEndpoints__WEBPACK_IMPORTED_MODULE_0__[\"default\"].GET_DELUXE_ROOMSBYNUMBER(id));\n        console.log(response);\n        return response.data;\n    } catch (error) {\n        console.error(\"Error fetching Deluxe room details:\", error);\n        throw error;\n    }\n};\nconst getSuperDeluxeRoomById = async (id)=>{\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(_APIEndpoints__WEBPACK_IMPORTED_MODULE_0__[\"default\"].GET_SUPERDELUXE_ROOMSBYNUMBER(id));\n        console.log(response);\n        return response.data;\n    } catch (error) {\n        console.error(\"Error fetching Super Deluxe room details:\", error);\n        throw error;\n    }\n};\nconst getFamilyRoomById = async (id)=>{\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(_APIEndpoints__WEBPACK_IMPORTED_MODULE_0__[\"default\"].GET_FAMILY_ROOMSBYNUMBER(id));\n        console.log(response);\n        return response.data;\n    } catch (error) {\n        console.error(\"Error fetching Family room details:\", error);\n        throw error;\n    }\n};\n// Get Super Deluxe Room data\nconst getSuperDeluxeRoom = ()=>{\n    return axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(_APIEndpoints__WEBPACK_IMPORTED_MODULE_0__[\"default\"].GET_SUPER_DELUXE_ROOMS()).then((response)=>{\n        console.log(\"Super Deluxe Room API Response:\", response.data);\n        return {\n            result: response.data\n        };\n    }).catch((error)=>{\n        console.error(\"Error fetching Super Deluxe Room data:\", error);\n        return {\n            result: null\n        };\n    });\n};\n// Get Family Deluxe Room data\nconst getFamilyDeluxeRoom = ()=>{\n    return axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(_APIEndpoints__WEBPACK_IMPORTED_MODULE_0__[\"default\"].GET_FAMILY_ROOMS()).then((response)=>{\n        console.log(\"Family Deluxe Room API Response:\", response.data);\n        return {\n            result: response.data\n        };\n    }).catch((error)=>{\n        console.error(\"Error fetching Family Deluxe Room data:\", error);\n        return {\n            result: null\n        };\n    });\n};\n// export const getAllRoomsDetails = () => {\n//   const url = EndPoints.GET_ROOMSDETAILS();\n//   console.log(\"Requesting URL:\", url);\n//   return axios\n//     .get(url)\n//     .then((response) => {\n//       console.log(\"API Response:\", response.data);\n//       return { result: response.data };\n//     })\n//     .catch((error) => {\n//       console.error(\"Error details:\", {\n//         message: error.message,\n//         code: error.code,\n//         config: error.config,\n//         response: error.response,\n//       });\n//       return { result: null };\n//     });\n// };\n// export const getRoomDetailsById = async (id) => {\n//   try {\n//     console.log(\"Room ID received:\", id); // Log the room ID for debugging\n//     let response;\n//     if (id && id.length === 24) { // MongoDB ObjectId format (24 characters)\n//       // Correct API endpoint usage\n//       response = await axios.get(EndPoints.GET_DELUXE_ROOMS(id));\n//       response = await axios.get(EndPoints.GET_SUPER_DELUXE_ROOMS(id));\n//       response = await axios.get(EndPoints.GET_FAMILY_ROOMS(id));\n//     } else {\n//       console.error(\"Invalid room ID:\", id); // Log invalid ID for debugging\n//       throw new Error(\"Invalid room ID\");\n//     }\n//     return response.data; // Return the room details\n//   } catch (error) {\n//     console.error(\"Error fetching room details:\", error);\n//     throw error; // Propagate the error if something goes wrong\n//   }\n// };\n// export const getRoomDetailsById = (id) => {\n//   return axios\n//     .get(`${EndPoints.GET_ROOMSDETAILS()}/${id}`) // Assuming the endpoint allows fetching by ID\n//     .then((response) => {\n//       console.log(\"API Response:\", response.data); // Check response data\n//       return { result: response.data }; // Ensure the data structure is correct\n//     })\n//     .catch((error) => {\n//       console.error(\"Error fetching room data:\", error);\n//       return { result: null };\n//     });\n// };\n// ManagementAPIController.js\n// Assuming you have a Webservices/ManagementAPIController.js file\n// export const roomBooking = async (bookingDetails) => {\n//   try {\n//     const response = await fetch(EndPoints.BOOKING_ROOMS(), { \n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(bookingDetails),\n//     });\n//     if (!response.ok) {\n//       throw new Error('Booking failed');\n//     }\n//     const result = await response.json(); // Assuming the backend returns JSON response\n//     return result;\n//   } catch (error) {\n//     console.error('Error in roomBooking:', error);\n//     throw error; // Rethrow error so it can be caught in handleSubmit\n//   }\n// };\nconst postBookingRoom = (bookingData)=>{\n    return fetch(_APIEndpoints__WEBPACK_IMPORTED_MODULE_0__[\"default\"].POST_BOOKING_ROOMS(), {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(bookingData)\n    }).then((response)=>{\n        // Check if the response status is OK (status code 200-299)\n        if (!response.ok) {\n            return response.text().then((text)=>{\n                // Log and throw detailed error if response is not OK\n                const errorMessage = \"Booking failed: \".concat(response.statusText, \". Response body: \").concat(text);\n                console.error(errorMessage);\n                throw new Error(errorMessage);\n            });\n        }\n        return response.json(); // Proceed with parsing the response as JSON\n    }).then((data)=>{\n        console.log(\"Booking successful\", data);\n        return data; // Return the parsed response data\n    }).catch((error)=>{\n        console.error(\"Error during booking:\", error.message);\n        throw error; // Rethrow error to be handled by the caller\n    });\n};\nconst createRoom = async (roomData)=>{\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].post(_APIEndpoints__WEBPACK_IMPORTED_MODULE_0__[\"default\"].POST_ROOMS(), roomData);\n        return response.data;\n    } catch (error) {\n        console.error(\"Error creating room:\", error);\n        throw error;\n    }\n};\n// Function to get a room by ID (GET /api/rooms/:id)\nconst getRoomById = async (_id)=>{\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(_APIEndpoints__WEBPACK_IMPORTED_MODULE_0__[\"default\"].GET_ROOMID(_id));\n        return response.data;\n    } catch (error) {\n        console.error(\"Error fetching room details:\", error);\n        throw error;\n    }\n};\n// api/amenities.js\nasync function getAmenities() {\n    try {\n        const response = await fetch(_APIEndpoints__WEBPACK_IMPORTED_MODULE_0__[\"default\"].GET_AMINITIES(), {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n        if (!response.ok) {\n            throw new Error(\"HTTP error! status: \".concat(response.status));\n        }\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.error('Error fetching amenities:', error);\n        throw error;\n    }\n}\n//------\n// Export function for creating a deluxe room\nasync function PutDeluxeRoom(id, deluxeRoomData) {\n    try {\n        const updatedRoomData = {\n            ...deluxeRoomData,\n            available: false\n        };\n        // Perform the PUT request to update the deluxe room\n        const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].put(_APIEndpoints__WEBPACK_IMPORTED_MODULE_0__[\"default\"].PUT_DELUXE_ROOM(id), updatedRoomData);\n        console.log(\"Updated Deluxe Room Data:\", response.data);\n        return response.data;\n    } catch (error) {\n        console.error(\"Error updating deluxe room:\", error);\n        throw error; // Rethrow error for further handling\n    }\n}\n_c = PutDeluxeRoom;\nasync function PutSuperDeluxeRoom(id, deluxeRoomData) {\n    try {\n        const updatedRoomData = {\n            ...deluxeRoomData,\n            available: false\n        };\n        // Perform the PUT request to update the super deluxe room\n        const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].put(_APIEndpoints__WEBPACK_IMPORTED_MODULE_0__[\"default\"].PUT_SUPERDELUXE_ROOM(id), updatedRoomData);\n        console.log(\"Updated Super Deluxe Room Data:\", response.data);\n        return response.data;\n    } catch (error) {\n        console.error(\"Error updating super deluxe room:\", error);\n        throw error; // Rethrow error for further handling\n    }\n}\n_c1 = PutSuperDeluxeRoom;\nasync function PutFamilyRoom(id, deluxeRoomData) {\n    try {\n        const updatedRoomData = {\n            ...deluxeRoomData,\n            available: false\n        };\n        // Perform the PUT request to update the family room\n        const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].put(_APIEndpoints__WEBPACK_IMPORTED_MODULE_0__[\"default\"].PUT_FAMILY_ROOM(id), updatedRoomData);\n        console.log(\"Updated Family Room Data:\", response.data);\n        return response.data;\n    } catch (error) {\n        console.error(\"Error updating family room:\", error);\n        throw error; // Rethrow error for further handling\n    }\n}\n_c2 = PutFamilyRoom;\nconst getAllBookingRooms = ()=>{\n    const url = _APIEndpoints__WEBPACK_IMPORTED_MODULE_0__[\"default\"].GET_ALL_BOOKING_ROOMS();\n    console.log(\"Requesting URL:\", url);\n    return axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(url).then((response)=>{\n        console.log(\"API Response:\", response.data);\n        return {\n            result: response.data\n        };\n    }).catch((error)=>{\n        console.error(\"Error details:\", {\n            message: error.message,\n            code: error.code,\n            config: error.config,\n            response: error.response\n        });\n        return {\n            result: null\n        };\n    });\n};\n//---login--//\nconst loginUser = (loginData)=>{\n    return fetch(_APIEndpoints__WEBPACK_IMPORTED_MODULE_0__[\"default\"].LOGIN_USER(), {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(loginData)\n    }).then((response)=>{\n        if (!response.ok) {\n            return Promise.reject('Failed to login');\n        }\n        return response.json();\n    }).then((data)=>{\n        // Store token and user data in localStorage\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('user', JSON.stringify(data.user)); // Save user data\n        console.log('Login Successful:', data);\n        return data.user; // Return user data\n    }).catch((error)=>{\n        console.error('Login Error:', error);\n        throw error;\n    });\n};\nfunction registerUser(userData) {\n    return fetch(_APIEndpoints__WEBPACK_IMPORTED_MODULE_0__[\"default\"].REGISTER_USER(), {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n    }).then((response)=>{\n        if (!response.ok) {\n            throw new Error('Failed to register user');\n        }\n        return response.json(); // Return the response data as JSON\n    }).then((data)=>{\n        console.log('User registered successfully', data);\n        return data; // Return the success data\n    }).catch((error)=>{\n        console.error('Error registering user:', error);\n        throw error; // Throw error to be handled by the caller\n    });\n}\n// Function to send booking emails\nconst sendBookingEmails = async (bookingDetails)=>{\n    const apiUrl = _APIEndpoints__WEBPACK_IMPORTED_MODULE_0__[\"default\"].MAIL_URL; // Ensure EndPoints.MAIL_URL is defined properly\n    try {\n        const response = await fetch(apiUrl, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(bookingDetails)\n        });\n        // Parse the response\n        const data = await response.json();\n        if (!response.ok) {\n            // Log the error response\n            console.error(\"Failed to send emails:\", data);\n            throw new Error(data.message || \"Error sending emails\");\n        }\n        console.log(\"Emails sent successfully:\", data);\n        return data;\n    } catch (error) {\n        // Catch and log any other errors\n        console.error(\"Error in sendBookingEmails:\", error);\n        throw error;\n    }\n};\n//-get all rooms\nconst getAllRooms = ()=>{\n    return axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(_APIEndpoints__WEBPACK_IMPORTED_MODULE_0__[\"default\"].GET_ALL_ROOMS()).then((response)=>{\n        console.log(\"getAllRooms API Response:\", response.data);\n        return {\n            result: response.data\n        };\n    }).catch((error)=>{\n        console.error(\"Error fetching getAllRooms Room data:\", error);\n        return {\n            result: null\n        };\n    });\n};\n//-get all rooms check availability\nconst fetchAvailableRooms = async (checkIn, checkOut, roomType)=>{\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get('/api/allrooms/availability', {\n            params: {\n                checkIn: checkIn,\n                checkOut: checkOut,\n                roomType: roomType\n            }\n        });\n        return response.data.availableRooms;\n    } catch (error) {\n        console.error('Error fetching available rooms:', error);\n        return [];\n    }\n};\n//Footer\n// Function to get the footer details\nconst getFooter = async ()=>{\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(_APIEndpoints__WEBPACK_IMPORTED_MODULE_0__[\"default\"].GET_FOOTER());\n        console.log(\"getFooter API Response:\", response.data);\n        return response.data;\n    } catch (error) {\n        console.error(\"Error fetching getFooter data:\", error);\n        throw error;\n    }\n};\nconst getAmenitiesPage = async ()=>{\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(_APIEndpoints__WEBPACK_IMPORTED_MODULE_0__[\"default\"].GET_AMENITIES_PAGE());\n        console.log(\"getAmenitiesPage API Response:\", response.data);\n        return response.data;\n    } catch (error) {\n        console.error(\"Error fetching getAmenitiesPage data:\", error);\n        throw error;\n    }\n};\nconst getAboutUs = async ()=>{\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].get(_APIEndpoints__WEBPACK_IMPORTED_MODULE_0__[\"default\"].GET_ABOUT_US());\n        console.log(\"getAboutUs API Response:\", response.data);\n        return response.data;\n    } catch (error) {\n        console.error(\"Error fetching getAboutUs data:\", error);\n        throw error;\n    }\n};\nconst submitForm = async (formData)=>{\n    try {\n        const response = await fetch(_APIEndpoints__WEBPACK_IMPORTED_MODULE_0__[\"default\"].MAIL_URL(), {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(formData)\n        });\n        // Check if the response is successful (status code 2xx)\n        if (!response.ok) {\n            // Handle error based on the status code\n            throw new Error(\"Failed to send the email. Status: \".concat(response.status));\n        }\n        // Try parsing the JSON response if it's valid\n        try {\n            const result = await response.json();\n            console.log('Email sent successfully:', result);\n            return result; // Return the response for further handling in the calling function\n        } catch (jsonError) {\n            // Handle the case where the response is not a valid JSON\n            console.error('Failed to parse JSON response:', jsonError);\n            throw new Error('Received an invalid JSON response from the server');\n        }\n    } catch (error) {\n        // Log the error and return a useful message\n        console.error('Error submitting form:', error);\n        return {\n            error: error.message || 'An unknown error occurred'\n        }; // Return the error message for UI feedback\n    }\n};\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"PutDeluxeRoom\");\n$RefreshReg$(_c1, \"PutSuperDeluxeRoom\");\n$RefreshReg$(_c2, \"PutFamilyRoom\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/Webservices/HotelAPIController.js\n"));

/***/ })

});